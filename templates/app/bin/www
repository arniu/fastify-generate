#!/usr/bin/env node

const index = require('../index')
const config = require('../config')

const app = require('fastify')(config.options)

app
  .register(index, { prefix: config.prefix })
  .listen(config.port, err => {
    if (err) shutdown(err)
  })

/**
 * Shutdown server
 *
 * @param {(string|Error)} [message]
 */
function shutdown (message) {
  app.close(() => {
    if (message instanceof Error) {
      process.exitCode = 1
    }

    console.log(message)
    // process.exit()
  })
}

// Exit on unhandled rejection
process.on('unhandledRejection', shutdown)

// Quit on Ctrl-C when running docker in terminal
process.on('SIGINT', () => {
  shutdown('Catch SIGINT, shutdown.')
})

// Quit properly on docker stop
process.on('SIGTERM', () => {
  shutdown('Catch SIGTERM, shutdown.')
})
